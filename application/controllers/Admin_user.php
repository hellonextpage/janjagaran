<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Admin_user extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Admin_user_model');
		$is_logged_in = $this->session->userdata("admin_id");
        if($is_logged_in == "" || $is_logged_in == null){
            redirect("dashboard/login");
        }
    } 

    /*
     * Listing of admin_users
     */
    function index()
    {
        $data['admin_users'] = $this->Admin_user_model->get_all_admin_users();
        
        $data['_view'] = 'admin_user/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new admin_user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('login_password','Login Password','required|min_length[3]');
		$this->form_validation->set_rules('person_name','Person Name','required|min_length[3]');
		$this->form_validation->set_rules('login_username','Login Username','required|min_length[3]');
		$this->form_validation->set_rules('zilla_id','Zilla Id','required');
		$this->form_validation->set_rules('mobile_no','Mobile No','numeric|exact_length[10]');
		$this->form_validation->set_rules('email_id','Email','valid_email');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'role' => $this->input->post('role'),
				'is_active' => empty($this->input->post('is_active'))?0:$this->input->post('is_active'),
				'zilla_id' => $this->input->post('zilla_id'),
				'person_name' => $this->input->post('person_name'),
				'mobile_no' => $this->input->post('mobile_no'),
				'email_id' => $this->input->post('email_id'),
				'login_username' => $this->input->post('login_username'),
				'login_password' => $this->input->post('login_password'),
				'created_on' => date('Y-m-d H:i:s'),
				'updated_on' => date('Y-m-d H:i:s'),
            );
            
            $admin_user_id = $this->Admin_user_model->add_admin_user($params);
            redirect('admin_user/index');
        }
        else
        {
			$this->load->model('Zilla_model');
			$data['all_zilla'] = $this->Zilla_model->get_all_zilla();
            
            $data['_view'] = 'admin_user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a admin_user
     */
    function edit($admin_id)
    {   
        // check if the admin_user exists before trying to edit it
        $data['admin_user'] = $this->Admin_user_model->get_admin_user($admin_id);
        
        if(isset($data['admin_user']['admin_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('login_password','Login Password','required|min_length[3]');
			$this->form_validation->set_rules('person_name','Person Name','required|min_length[3]');
			$this->form_validation->set_rules('login_username','Login Username','required|min_length[3]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'role' => $this->input->post('role'),
					'is_active' => $this->input->post('is_active'),
					'zilla_id' => $this->input->post('zilla_id'),
					'person_name' => $this->input->post('person_name'),
					'mobile_no' => $this->input->post('mobile_no'),
					'email_id' => $this->input->post('email_id'),
					'login_username' => $this->input->post('login_username'),
					'login_password' => $this->input->post('login_password'),
					'updated_on' => date('Y-m-d H:i:s'),
                );

                $this->Admin_user_model->update_admin_user($admin_id,$params);            
                redirect('admin_user/index');
            }
            else
            {
				$this->load->model('Zilla_model');
				$data['all_zilla'] = $this->Zilla_model->get_all_zilla();

                $data['_view'] = 'admin_user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The admin_user you are trying to edit does not exist.');
    } 

    /*
     * Deleting admin_user
     */
    function remove($admin_id)
    {
        $admin_user = $this->Admin_user_model->get_admin_user($admin_id);

        // check if the admin_user exists before trying to delete it
        if(isset($admin_user['admin_id']))
        {
            $this->Admin_user_model->delete_admin_user($admin_id);
            redirect('admin_user/index');
        }
        else
            show_error('The admin_user you are trying to delete does not exist.');
    }
    
}
